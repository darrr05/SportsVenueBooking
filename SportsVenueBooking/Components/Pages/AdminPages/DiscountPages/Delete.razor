@page "/discounts/delete"
@using Microsoft.EntityFrameworkCore
@using SportsVenueBooking.Domain
@inject IDbContextFactory<SportsVenueBooking.Data.SportsVenueBookingContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Delete</PageTitle>

<h1>Delete</h1>

<p>Are you sure you want to delete this?</p>
<div>
    <h2>Discount</h2>
    <hr />
    @if (discount is null)
    {
        <p><em>Loading...</em></p>
    }
    else {
        <dl class="row">
            <dt class="col-sm-2">Code</dt>
            <dd class="col-sm-10">@discount.Code</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Amount</dt>
            <dd class="col-sm-10">@discount.Amount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">Percentage</dt>
            <dd class="col-sm-10">@discount.Percentage</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">MaxUses</dt>
            <dd class="col-sm-10">@discount.MaxUses</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UsageCount</dt>
            <dd class="col-sm-10">@discount.UsageCount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">IsElderlyDiscount</dt>
            <dd class="col-sm-10">@discount.IsElderlyDiscount</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">ExpirationDate</dt>
            <dd class="col-sm-10">@discount.ExpirationDate</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateCreated</dt>
            <dd class="col-sm-10">@discount.DateCreated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">DateUpdated</dt>
            <dd class="col-sm-10">@discount.DateUpdated</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">CreatedBy</dt>
            <dd class="col-sm-10">@discount.CreatedBy</dd>
        </dl>
        <dl class="row">
            <dt class="col-sm-2">UpdatedBy</dt>
            <dd class="col-sm-10">@discount.UpdatedBy</dd>
        </dl>
        <EditForm method="post" Model="discount" OnValidSubmit="DeleteDiscount" FormName="delete" Enhance>
            <button type="submit" class="btn btn-danger" disabled="@(discount is null)">Delete</button> |
            <a href="/discounts">Back to List</a>
        </EditForm>
    }
</div>

@code {
    private Discount? discount;

    [SupplyParameterFromQuery]
    private int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        using var context = DbFactory.CreateDbContext();
        discount = await context.Discounts.FirstOrDefaultAsync(m => m.Id == Id);

        if (discount is null)
        {
            NavigationManager.NavigateTo("notfound");
        }
    }

    private async Task DeleteDiscount()
    {
        using var context = DbFactory.CreateDbContext();
        context.Discounts.Remove(discount!);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/discounts");
    }
}
