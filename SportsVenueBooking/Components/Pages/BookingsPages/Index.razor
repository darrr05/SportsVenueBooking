@page "/bookings"
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.QuickGrid
@using SportsVenueBooking.Domain
@using SportsVenueBooking.Data
@implements IAsyncDisposable
@inject IDbContextFactory<SportsVenueBooking.Data.SportsVenueBookingContext> DbFactory

<PageTitle>Index</PageTitle>

<h1>Index</h1>

<p>
    <a href="bookings/create">Create New</a>
</p>

<QuickGrid Class="table" Items="context.Bookings">
    <PropertyColumn Property="bookings => bookings.SportName" />
    <PropertyColumn Property="bookings => bookings.LocationName" />
    <PropertyColumn Property="bookings => bookings.TimeslotDescription" />
    <PropertyColumn Property="bookings => bookings.SportId" />
    <PropertyColumn Property="bookings => bookings.LocationId" />
    <PropertyColumn Property="bookings => bookings.TimeslotId" />
    <PropertyColumn Property="bookings => bookings.DateCreated" />
    <PropertyColumn Property="bookings => bookings.DateUpdated" />
    <PropertyColumn Property="bookings => bookings.CreatedBy" />
    <PropertyColumn Property="bookings => bookings.UpdatedBy" />

    <TemplateColumn Context="bookings">
        <a href="@($"bookings/edit?id={bookings.Id}")">Edit</a> |
        <a href="@($"bookings/details?id={bookings.Id}")">Details</a> |
        <a href="@($"bookings/delete?id={bookings.Id}")">Delete</a>
    </TemplateColumn>
</QuickGrid>

@code {
    private SportsVenueBookingContext context = default!;

    protected override void OnInitialized()
    {
        context = DbFactory.CreateDbContext();
    }

    public async ValueTask DisposeAsync() => await context.DisposeAsync();
}
